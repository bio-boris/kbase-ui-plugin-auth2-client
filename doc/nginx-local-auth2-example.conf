# redirect accidental insecure requests to https
server {
  listen 80 default_server;
  listen [::]:80 default_server;
    server_name dev.kbase.us;
  return 301 https://dev.kbase.us$request_uri;
}

# Proxy for mongodb to aid in mongo-munging
server {
  listen 8090;
   location / {
    proxy_pass http://127.0.0.1:28017;
  }
}

server {
  listen 9999;
  listen 9443 ssl;
  server_name ci.kbase.us;
  ssl_certificate /vagrant/test.crt;
  ssl_certificate_key /vagrant/test.key;
  location /services {
    proxy_pass https://ci.kbase.us/services;
  }
}

# Proxy for kbase-ui
# Note that the server certs need to be "real" *.kbase.us 
# for tests 
# TODO: work out how to start up each type of browser to 
# allow for self-signed certs to avoid this requirement.
server {
  listen 443 ssl;
  server_name dev.kbase.us;
  ssl_certificate /vagrant/test.crt;
  ssl_certificate_key /vagrant/test.key;
  location / {
      # proxy_pass http://127.0.0.1:8080;
      root /vagrant/kbase-ui/build/build/client;
      index index.html;
  }
}

# Proxy for auth2 server
server {
  listen 443 ssl;
  server_name authdev.kbase.us;
  ssl_certificate /vagrant/test.crt;
  ssl_certificate_key /vagrant/test.key;

  location /services/auth/ {
    proxy_pass http://127.0.0.1:9090/;
    # the auth2 service sets the cookie path to absolute /login and /link,
    # but of course the browser will see some other path prefixed with the
    # location (same as in this location section) the service is installed
    # at.
    proxy_cookie_path /login /services/auth/login;
    proxy_cookie_path /link /services/auth/link;

    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
    }
    # NB need to use Headers More module here. Need nginx-extras for this.
    # it sets headers for all response codes.
    #more_set_headers 'Access-Control-Allow-Origin: https://dev.kbase.us';
    #more_set_headers 'Access-Control-Allow-Origin: *';
    more_set_headers 'Access-Control-Allow-Origin: $http_origin';
    more_set_headers 'Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS';
    more_set_headers 'Access-Control-Allow-Credentials: true';
    more_set_headers 'Access-Control-Allow-Headers: DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,Cookie';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
  }
  location /services/ {
  proxy_pass https://ci.kbase.us/services/;

    if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
    }
    # NB need to use Headers More module here. Need nginx-extras for this.
    # it sets headers for all response codes.
    more_set_headers 'Access-Control-Allow-Origin: https://dev.kbase.us';
    more_set_headers 'Access-Control-Allow-Methods: GET, POST, OPTIONS';
    more_set_headers 'Access-Control-Allow-Credentials: true';
    more_set_headers 'Access-Control-Allow-Headers: DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,Cookie';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
  }
}